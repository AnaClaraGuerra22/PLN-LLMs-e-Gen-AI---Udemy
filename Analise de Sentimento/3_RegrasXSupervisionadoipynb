{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyM9Npwc6nv0Wvls+nuXY04D"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Aula 1: Comparando Regras com Modelo Supervisionado\n","\n","- Comparar performance\n","- Supervisionado: LSTM\n","- Regras: VADER\n","\n","\n","\n","---\n","\n","### Pre processamento\n","- Classe Irrelevante vai virar Neutral\n","- Remover tweets com texto NaN\n","\n","\n","\n","---\n","\n","### VADER\n","- Criar uma coluna vader_sentiment\n","- Registrar Polarity Score nessa coluna\n","- Remover o score Compound\n","- Buscar o maior score entre Positivo, Negativo e Neutro\n","- Registrar na coluna vader_sentiment\n","- Avaliar a performancve comparando a coluna sentiment"],"metadata":{"id":"EGKCwiCezcMb"}},{"cell_type":"markdown","source":["# Aula 2: Regras VS Supervisionado I"],"metadata":{"id":"AgqyVJ4p0bPQ"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler, LabelEncoder\n","from sklearn.metrics import accuracy_score, confusion_matrix, classification_report, ConfusionMatrixDisplay\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, Flatten, Embedding, LSTM, SpatialDropout1D\n","from tensorflow.keras.utils import to_categorical\n","\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.utils import to_categorical\n","\n","from tensorflow.keras.preprocessing.text import Tokenizer\n","from tensorflow.keras.preprocessing.sequence import pad_sequences\n","\n","import nltk\n","nltk.download('vader_lexicon')\n","from nltk.sentiment.vader import SentimentIntensityAnalyzer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gG5B785I0y3Z","executionInfo":{"status":"ok","timestamp":1757293057553,"user_tz":180,"elapsed":2376,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"aaff5b7e-1113-43e4-eb30-2817f845b23e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package vader_lexicon to /root/nltk_data...\n"]}]},{"cell_type":"code","source":["url = 'https://raw.githubusercontent.com/AnaClaraGuerra22/PLN-LLMs-e-Gen-AI---Udemy/931c68630a663029c81bb1066b92d67ae90a4001/Analise%20de%20Sentimento/Data/Tweets2.csv'\n","\n","tweets = pd.read_csv(url)\n","print(tweets.shape)\n","tweets.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":223},"id":"PAf0Hwfg0g1X","executionInfo":{"status":"ok","timestamp":1757293354159,"user_tz":180,"elapsed":671,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"c811791b-bacd-4027-d14e-75cef996b679"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["(74682, 4)\n"]},{"output_type":"execute_result","data":{"text/plain":["     id        local sentiment  \\\n","0  2401  Borderlands  Positive   \n","1  2401  Borderlands  Positive   \n","2  2401  Borderlands  Positive   \n","3  2401  Borderlands  Positive   \n","4  2401  Borderlands  Positive   \n","\n","                                                text  \n","0  im getting on borderlands and i will murder yo...  \n","1  I am coming to the borders and I will kill you...  \n","2  im getting on borderlands and i will kill you ...  \n","3  im coming on borderlands and i will murder you...  \n","4  im getting on borderlands 2 and i will murder ...  "],"text/html":["\n","  <div id=\"df-37168f96-bc78-42a6-952f-c42354ab7a4d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>id</th>\n","      <th>local</th>\n","      <th>sentiment</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2401</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>im getting on borderlands and i will murder yo...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2401</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>I am coming to the borders and I will kill you...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2401</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>im getting on borderlands and i will kill you ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2401</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>im coming on borderlands and i will murder you...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2401</td>\n","      <td>Borderlands</td>\n","      <td>Positive</td>\n","      <td>im getting on borderlands 2 and i will murder ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37168f96-bc78-42a6-952f-c42354ab7a4d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-37168f96-bc78-42a6-952f-c42354ab7a4d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-37168f96-bc78-42a6-952f-c42354ab7a4d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6c1d818d-ec7f-47a0-b34d-7d5120b05481\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6c1d818d-ec7f-47a0-b34d-7d5120b05481')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6c1d818d-ec7f-47a0-b34d-7d5120b05481 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"tweets","summary":"{\n  \"name\": \"tweets\",\n  \"rows\": 74682,\n  \"fields\": [\n    {\n      \"column\": \"id\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3740,\n        \"min\": 1,\n        \"max\": 13200,\n        \"num_unique_values\": 12447,\n        \"samples\": [\n          1616,\n          2660,\n          2335\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"local\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 32,\n        \"samples\": [\n          \"Cyberpunk2077\",\n          \"Microsoft\",\n          \"TomClancysRainbowSix\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"sentiment\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Neutral\",\n          \"Irrelevant\",\n          \"Positive\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 69491,\n        \"samples\": [\n          \"Thanks to @ Kain0025 for the raid. Thanks to @ gamingstreams and @ velonese002 for the bitts! And thanks to @ ColTrysTohete for hanging out and hanging out!. I hope to continue streaming regularly.. watch the w / @ Cohtstreams _ coming live!\",\n          \"How not to get bored about every damn thing in life.\",\n          \"The Best Way to Protect the Samsung Galaxy Note10+ buff.ly/2zkjIhU <unk> ^\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["tweets['sentiment'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":241},"id":"ceoAXcUK1ZaV","executionInfo":{"status":"ok","timestamp":1757293356112,"user_tz":180,"elapsed":15,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"1a02cd25-cbcd-42e8-934f-074536044fdd"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sentiment\n","Negative      22542\n","Positive      20832\n","Neutral       18318\n","Irrelevant    12990\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>sentiment</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Negative</th>\n","      <td>22542</td>\n","    </tr>\n","    <tr>\n","      <th>Positive</th>\n","      <td>20832</td>\n","    </tr>\n","    <tr>\n","      <th>Neutral</th>\n","      <td>18318</td>\n","    </tr>\n","    <tr>\n","      <th>Irrelevant</th>\n","      <td>12990</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["tweets.loc[tweets['sentiment'] == 'Irrelevant', 'sentiment'] = 'Neutral'"],"metadata":{"id":"as3qo9qj2LUx","executionInfo":{"status":"ok","timestamp":1757293614471,"user_tz":180,"elapsed":3,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["tweets['sentiment'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":209},"id":"9yLOQNgo10AX","executionInfo":{"status":"ok","timestamp":1757293618516,"user_tz":180,"elapsed":4,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"9fa20f44-d0cc-400b-9b37-deb344eea974"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["sentiment\n","Neutral     31308\n","Negative    22542\n","Positive    20832\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>sentiment</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Neutral</th>\n","      <td>31308</td>\n","    </tr>\n","    <tr>\n","      <th>Negative</th>\n","      <td>22542</td>\n","    </tr>\n","    <tr>\n","      <th>Positive</th>\n","      <td>20832</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# remover com NaN\n","tweets = tweets.dropna(subset=['text'])\n","tweets.reset_index(drop=True, inplace=True)"],"metadata":{"id":"CmKYJQGW3zVM","executionInfo":{"status":"ok","timestamp":1757293892627,"user_tz":180,"elapsed":8,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["tweets.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4EZuPg_J4NnW","executionInfo":{"status":"ok","timestamp":1757293899838,"user_tz":180,"elapsed":7,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"58ad597b-e874-45d0-8baf-6f139a4dcb10"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(73996, 4)"]},"metadata":{},"execution_count":21}]},{"cell_type":"markdown","source":["# Aula 3: Regras VS Supervisionado II"],"metadata":{"id":"HNvsCFYD0gOI"}},{"cell_type":"markdown","source":["### Supervisionado"],"metadata":{"id":"rlSlCA2i4bGv"}},{"cell_type":"code","source":["token = Tokenizer(num_words=1000)\n","token.fit_on_texts(tweets['text'].values) # cria o modelo"],"metadata":{"id":"p23ek0nk4W3n","executionInfo":{"status":"ok","timestamp":1757293964257,"user_tz":180,"elapsed":2335,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["x = token.texts_to_sequences(tweets['text'].values) # executa o modelo\n","x = pad_sequences(x, padding = 'post', maxlen=100)    # deixar do mesmo tamanho as mensagens"],"metadata":{"id":"gwaU7GzG4jNA","executionInfo":{"status":"ok","timestamp":1757293990897,"user_tz":180,"elapsed":1490,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["Labelencoder = LabelEncoder()\n","y = Labelencoder.fit_transform(tweets['sentiment'])\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kMVXif1y4rUh","executionInfo":{"status":"ok","timestamp":1757294029353,"user_tz":180,"elapsed":7,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"151057ea-5c12-402c-d885-9285d325009d"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["[2 2 2 ... 2 2 2]\n"]}]},{"cell_type":"code","source":["y = to_categorical(y)\n","print(y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cyz8Oc8b4xJB","executionInfo":{"status":"ok","timestamp":1757294042427,"user_tz":180,"elapsed":5,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"8fa673c6-b148-4359-9211-1d01c0cb8e41"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["[[0. 0. 1.]\n"," [0. 0. 1.]\n"," [0. 0. 1.]\n"," ...\n"," [0. 0. 1.]\n"," [0. 0. 1.]\n"," [0. 0. 1.]]\n"]}]},{"cell_type":"code","source":["x_train, x_test, y_tran, y_test = train_test_split(x, y, test_size=0.4)\n","x_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ULd7wrs74z4h","executionInfo":{"status":"ok","timestamp":1757294073502,"user_tz":180,"elapsed":6,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"5def8a83-96ac-4384-ce5f-eaa50f88e995"},"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[635,   1,  78, ...,   0,   0,   0],\n","       [322,  48, 265, ...,   0,   0,   0],\n","       [341, 315,  17, ...,   0,   0,   0],\n","       ...,\n","       [101, 101, 432, ...,   0,   0,   0],\n","       [ 33,   2, 120, ...,   0,   0,   0],\n","       [329,   0,   0, ...,   0,   0,   0]], dtype=int32)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["modelo = Sequential()\n","\n","modelo.add(Embedding(input_dim=len(token.word_index), output_dim=128, input_length=x.shape[1]))\n","\n","modelo.add(SpatialDropout1D(0.2))\n","\n","modelo.add(LSTM(196, dropout=0.2, recurrent_dropout=0, activation='tanh', recurrent_activation='sigmoid', unroll=False, use_bias=True))\n","\n","modelo.add(Dense(3, activation='softmax'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jgP5C_jH47Xz","executionInfo":{"status":"ok","timestamp":1757294083483,"user_tz":180,"elapsed":189,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"53457fb9-6db9-4986-bf73-64e2d2584146"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/embedding.py:97: UserWarning: Argument `input_length` is deprecated. Just remove it.\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["modelo.compile(optimizer='Adam', loss='categorical_crossentropy', metrics=['accuracy'])\n","print(modelo.summary())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":290},"id":"FLZZUNnL49qk","executionInfo":{"status":"ok","timestamp":1757294095719,"user_tz":180,"elapsed":201,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"dc3c5cc4-d21b-4a52-9184-c04e6d0d93d2"},"execution_count":29,"outputs":[{"output_type":"display_data","data":{"text/plain":["\u001b[1mModel: \"sequential\"\u001b[0m\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ embedding (\u001b[38;5;33mEmbedding\u001b[0m)           │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ spatial_dropout1d               │ ?                      │             \u001b[38;5;34m0\u001b[0m │\n","│ (\u001b[38;5;33mSpatialDropout1D\u001b[0m)              │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                     │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ ?                      │   \u001b[38;5;34m0\u001b[0m (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n","┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n","┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n","│ embedding (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)           │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ spatial_dropout1d               │ ?                      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n","│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">SpatialDropout1D</span>)              │                        │               │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                     │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","├─────────────────────────────────┼────────────────────────┼───────────────┤\n","│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ ?                      │   <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n","└─────────────────────────────────┴────────────────────────┴───────────────┘\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"],"text/html":["<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n","</pre>\n"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["None\n"]}]},{"cell_type":"code","source":["modelo.fit(x_train, y_tran, epochs=5, batch_size=500, verbose = True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uBMxvAEk5BeL","executionInfo":{"status":"ok","timestamp":1757295752582,"user_tz":180,"elapsed":964346,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"a1018e60-119c-4326-950c-4a7be6cab8ff"},"execution_count":32,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/5\n","\u001b[1m89/89\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m179s\u001b[0m 2s/step - accuracy: 0.4181 - loss: 1.0826\n","Epoch 2/5\n","\u001b[1m89/89\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m204s\u001b[0m 2s/step - accuracy: 0.4213 - loss: 1.0816\n","Epoch 3/5\n","\u001b[1m89/89\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m179s\u001b[0m 2s/step - accuracy: 0.4208 - loss: 1.0820\n","Epoch 4/5\n","\u001b[1m89/89\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m201s\u001b[0m 2s/step - accuracy: 0.4156 - loss: 1.0837\n","Epoch 5/5\n","\u001b[1m89/89\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m156s\u001b[0m 2s/step - accuracy: 0.4195 - loss: 1.0826\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.src.callbacks.history.History at 0x7d15427a6f60>"]},"metadata":{},"execution_count":32}]},{"cell_type":"code","source":["loss, accuracySupervisionado = modelo.evaluate(x_test, y_test)\n","print('Loss: ', loss)\n","print('Accuracy: ', accuracySupervisionado)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YY9z99uc5cG-","executionInfo":{"status":"ok","timestamp":1757295835103,"user_tz":180,"elapsed":82239,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"f4eec60a-a303-4491-c6d6-04fff44146e9"},"execution_count":33,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m925/925\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m65s\u001b[0m 70ms/step - accuracy: 0.4144 - loss: 1.0841\n","Loss:  1.0824337005615234\n","Accuracy:  0.41852766275405884\n"]}]},{"cell_type":"code","source":["prev = modelo.predict(x_test)\n","prev"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"T-hHl_BT5eUd","executionInfo":{"status":"ok","timestamp":1757295917602,"user_tz":180,"elapsed":82501,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"9ad283cc-4f67-43bc-c889-79a058cae085"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m925/925\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m65s\u001b[0m 70ms/step\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[0.30111644, 0.4214764 , 0.2774072 ],\n","       [0.30111644, 0.4214764 , 0.2774072 ],\n","       [0.30111644, 0.4214764 , 0.2774072 ],\n","       ...,\n","       [0.3011164 , 0.42147636, 0.2774072 ],\n","       [0.30111644, 0.42147636, 0.2774072 ],\n","       [0.3011164 , 0.42147636, 0.2774072 ]], dtype=float32)"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["# Aula 4: Regras VS Supervisionado III\n","\n","### VADER"],"metadata":{"id":"eqJdDiUl0l7f"}},{"cell_type":"code","execution_count":35,"metadata":{"id":"E-zGnkC6zTqx","executionInfo":{"status":"ok","timestamp":1757295917808,"user_tz":180,"elapsed":207,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"outputs":[],"source":["instancia = SentimentIntensityAnalyzer()"]},{"cell_type":"code","source":["tweets['vander_sentiment'] = ''"],"metadata":{"id":"vnU0gU_x5zCg","executionInfo":{"status":"ok","timestamp":1757295917809,"user_tz":180,"elapsed":2,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["for y in range(len(tweets.index)):\n","  x = instancia.polarity_scores(tweets['text'].iloc[y])\n","  del x['compound']           # excluir o compound\n","  maior = max(x, key=x.get)  # pegar o maior score neg, pos ou neu\n","  tweets.loc[y,'vander_sentiment'] = maior\n",""],"metadata":{"id":"puiKrZ6b56fq","executionInfo":{"status":"ok","timestamp":1757295955787,"user_tz":180,"elapsed":37977,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":37,"outputs":[]},{"cell_type":"code","source":["tweets['vander_sentiment'].value_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"fBJ6IbTh7EHz","executionInfo":{"status":"ok","timestamp":1757295955789,"user_tz":180,"elapsed":11,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"43578a0b-67e6-477f-a138-242d1b0ef111"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method IndexOpsMixin.value_counts of 0        neu\n","1        neu\n","2        neu\n","3        neu\n","4        neu\n","        ... \n","73991    neu\n","73992    neu\n","73993    neu\n","73994    neu\n","73995    neu\n","Name: vander_sentiment, Length: 73996, dtype: object>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.base.IndexOpsMixin.value_counts</b><br/>def value_counts(normalize: bool=False, sort: bool=True, ascending: bool=False, bins=None, dropna: bool=True) -&gt; Series</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.12/dist-packages/pandas/core/base.py</a>Return a Series containing counts of unique values.\n","\n","The resulting object will be in descending order so that the\n","first element is the most frequently-occurring element.\n","Excludes NA values by default.\n","\n","Parameters\n","----------\n","normalize : bool, default False\n","    If True then the object returned will contain the relative\n","    frequencies of the unique values.\n","sort : bool, default True\n","    Sort by frequencies when True. Preserve the order of the data when False.\n","ascending : bool, default False\n","    Sort in ascending order.\n","bins : int, optional\n","    Rather than count values, group them into half-open bins,\n","    a convenience for ``pd.cut``, only works with numeric data.\n","dropna : bool, default True\n","    Don&#x27;t include counts of NaN.\n","\n","Returns\n","-------\n","Series\n","\n","See Also\n","--------\n","Series.count: Number of non-NA elements in a Series.\n","DataFrame.count: Number of non-NA elements in a DataFrame.\n","DataFrame.value_counts: Equivalent method on DataFrames.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; index = pd.Index([3, 1, 2, 3, 4, np.nan])\n","&gt;&gt;&gt; index.value_counts()\n","3.0    2\n","1.0    1\n","2.0    1\n","4.0    1\n","Name: count, dtype: int64\n","\n","With `normalize` set to `True`, returns the relative frequency by\n","dividing all values by the sum of values.\n","\n","&gt;&gt;&gt; s = pd.Series([3, 1, 2, 3, 4, np.nan])\n","&gt;&gt;&gt; s.value_counts(normalize=True)\n","3.0    0.4\n","1.0    0.2\n","2.0    0.2\n","4.0    0.2\n","Name: proportion, dtype: float64\n","\n","**bins**\n","\n","Bins can be useful for going from a continuous variable to a\n","categorical variable; instead of counting unique\n","apparitions of values, divide the index in the specified\n","number of half-open bins.\n","\n","&gt;&gt;&gt; s.value_counts(bins=3)\n","(0.996, 2.0]    2\n","(2.0, 3.0]      2\n","(3.0, 4.0]      1\n","Name: count, dtype: int64\n","\n","**dropna**\n","\n","With `dropna` set to `False` we can also see NaN index values.\n","\n","&gt;&gt;&gt; s.value_counts(dropna=False)\n","3.0    2\n","1.0    1\n","2.0    1\n","4.0    1\n","NaN    1\n","Name: count, dtype: int64</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 923);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["tweets.loc[tweets['vander_sentiment'] == 'neu', 'vander_sentiment'] = 'Neutral'\n","tweets.loc[tweets['vander_sentiment'] == 'neg', 'vander_sentiment'] = 'Negative'\n","tweets.loc[tweets['vander_sentiment'] == 'pos', 'vander_sentiment'] = 'Positive'"],"metadata":{"id":"g6aoy-Yf7S1j","executionInfo":{"status":"ok","timestamp":1757295955790,"user_tz":180,"elapsed":5,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}}},"execution_count":39,"outputs":[]},{"cell_type":"code","source":["tweets['vander_sentiment'].value_counts"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":203},"id":"CMfOA8fO8Ag1","executionInfo":{"status":"ok","timestamp":1757295955792,"user_tz":180,"elapsed":6,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"95295bfa-97cf-4259-810b-3c607b513278"},"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method IndexOpsMixin.value_counts of 0        Neutral\n","1        Neutral\n","2        Neutral\n","3        Neutral\n","4        Neutral\n","          ...   \n","73991    Neutral\n","73992    Neutral\n","73993    Neutral\n","73994    Neutral\n","73995    Neutral\n","Name: vander_sentiment, Length: 73996, dtype: object>"],"text/html":["<div style=\"max-width:800px; border: 1px solid var(--colab-border-color);\"><style>\n","      pre.function-repr-contents {\n","        overflow-x: auto;\n","        padding: 8px 12px;\n","        max-height: 500px;\n","      }\n","\n","      pre.function-repr-contents.function-repr-contents-collapsed {\n","        cursor: pointer;\n","        max-height: 100px;\n","      }\n","    </style>\n","    <pre style=\"white-space: initial; background:\n","         var(--colab-secondary-surface-color); padding: 8px 12px;\n","         border-bottom: 1px solid var(--colab-border-color);\"><b>pandas.core.base.IndexOpsMixin.value_counts</b><br/>def value_counts(normalize: bool=False, sort: bool=True, ascending: bool=False, bins=None, dropna: bool=True) -&gt; Series</pre><pre class=\"function-repr-contents function-repr-contents-collapsed\" style=\"\"><a class=\"filepath\" style=\"display:none\" href=\"#\">/usr/local/lib/python3.12/dist-packages/pandas/core/base.py</a>Return a Series containing counts of unique values.\n","\n","The resulting object will be in descending order so that the\n","first element is the most frequently-occurring element.\n","Excludes NA values by default.\n","\n","Parameters\n","----------\n","normalize : bool, default False\n","    If True then the object returned will contain the relative\n","    frequencies of the unique values.\n","sort : bool, default True\n","    Sort by frequencies when True. Preserve the order of the data when False.\n","ascending : bool, default False\n","    Sort in ascending order.\n","bins : int, optional\n","    Rather than count values, group them into half-open bins,\n","    a convenience for ``pd.cut``, only works with numeric data.\n","dropna : bool, default True\n","    Don&#x27;t include counts of NaN.\n","\n","Returns\n","-------\n","Series\n","\n","See Also\n","--------\n","Series.count: Number of non-NA elements in a Series.\n","DataFrame.count: Number of non-NA elements in a DataFrame.\n","DataFrame.value_counts: Equivalent method on DataFrames.\n","\n","Examples\n","--------\n","&gt;&gt;&gt; index = pd.Index([3, 1, 2, 3, 4, np.nan])\n","&gt;&gt;&gt; index.value_counts()\n","3.0    2\n","1.0    1\n","2.0    1\n","4.0    1\n","Name: count, dtype: int64\n","\n","With `normalize` set to `True`, returns the relative frequency by\n","dividing all values by the sum of values.\n","\n","&gt;&gt;&gt; s = pd.Series([3, 1, 2, 3, 4, np.nan])\n","&gt;&gt;&gt; s.value_counts(normalize=True)\n","3.0    0.4\n","1.0    0.2\n","2.0    0.2\n","4.0    0.2\n","Name: proportion, dtype: float64\n","\n","**bins**\n","\n","Bins can be useful for going from a continuous variable to a\n","categorical variable; instead of counting unique\n","apparitions of values, divide the index in the specified\n","number of half-open bins.\n","\n","&gt;&gt;&gt; s.value_counts(bins=3)\n","(0.996, 2.0]    2\n","(2.0, 3.0]      2\n","(3.0, 4.0]      1\n","Name: count, dtype: int64\n","\n","**dropna**\n","\n","With `dropna` set to `False` we can also see NaN index values.\n","\n","&gt;&gt;&gt; s.value_counts(dropna=False)\n","3.0    2\n","1.0    1\n","2.0    1\n","4.0    1\n","NaN    1\n","Name: count, dtype: int64</pre>\n","      <script>\n","      if (google.colab.kernel.accessAllowed && google.colab.files && google.colab.files.view) {\n","        for (const element of document.querySelectorAll('.filepath')) {\n","          element.style.display = 'block'\n","          element.onclick = (event) => {\n","            event.preventDefault();\n","            event.stopPropagation();\n","            google.colab.files.view(element.textContent, 923);\n","          };\n","        }\n","      }\n","      for (const element of document.querySelectorAll('.function-repr-contents')) {\n","        element.onclick = (event) => {\n","          event.preventDefault();\n","          event.stopPropagation();\n","          element.classList.toggle('function-repr-contents-collapsed');\n","        };\n","      }\n","      </script>\n","      </div>"]},"metadata":{},"execution_count":40}]},{"cell_type":"code","source":["y_pred = tweets['vander_sentiment']\n","y_test = tweets['sentiment']\n","\n","cm = confusion_matrix(y_test, y_pred)\n","print(cm)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dUcM7wFf8BH1","executionInfo":{"status":"ok","timestamp":1757295955805,"user_tz":180,"elapsed":12,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"ba8e22ce-db91-4643-99fd-67454cbf2d90"},"execution_count":41,"outputs":[{"output_type":"stream","name":"stdout","text":["[[ 2004 19902   452]\n"," [ 1122 28384  1477]\n"," [  534 17295  2826]]\n"]}]},{"cell_type":"code","source":["# medir a perfomance\n","\n","accuracyVADER = accuracy_score(y_test, y_pred)\n","print(accuracyVADER)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BepSfSFX8SKX","executionInfo":{"status":"ok","timestamp":1757295955813,"user_tz":180,"elapsed":7,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"3e7f0985-cfb1-451a-c06d-8af1d1c28b98"},"execution_count":42,"outputs":[{"output_type":"stream","name":"stdout","text":["0.44886210065408944\n"]}]},{"cell_type":"markdown","source":["### Comparando acuracia entre os modelos"],"metadata":{"id":"PV5zRL608ksx"}},{"cell_type":"code","source":["print('Acuracia do Supervisionado: ', accuracySupervisionado)\n","print('Acuracia do VADER: ', accuracyVADER)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oKKSefv68oXx","executionInfo":{"status":"ok","timestamp":1757295955822,"user_tz":180,"elapsed":8,"user":{"displayName":"Ana Clara Guerra Torres","userId":"03231704061204149263"}},"outputId":"fbadb231-0149-4548-d547-8c09fb3ae0d0"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Acuracia do Supervisionado:  0.41852766275405884\n","Acuracia do VADER:  0.44886210065408944\n"]}]}]}